{"version":3,"sources":["reusable/DocsLink.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/base/paginations/Pagnations.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Paginations","useState","currentPage","setCurrentPage","activePage","pages","onActivePageChange","size","align","addListClass"],"mappings":"uRAGMA,EAAW,SAAAC,GACf,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAHL,YAIIH,EAJJ,GAMMI,EAAOH,EAAI,kDAA8CA,GAASD,EAAMI,KAE9E,OACE,qBAAKC,UAAU,sBAAf,SACE,cAAC,KAAD,2BACMF,GADN,IAEEC,KAAMA,EACNE,IAAI,sBACJC,OAAO,SACPF,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCH,GAAQ,eAMjCM,MAAMC,KAAKV,I,gFCvBX,SAASW,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGS,QAETf,GAAKQ,EAAKQ,SAAWhB,GAH4BS,GAAK,IAK5D,MAAOQ,GACPP,GAAK,EACLH,EAAKU,EACL,QACA,IACOR,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,sFIuFvFC,UAlFK,WAClB,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,qCACE,eAAC,IAAD,WACE,eAAC,IAAD,wBAEE,cAAC,IAAD,CAAUlC,KAAK,mBAEjB,eAAC,IAAD,WACE,yCACA,cAAC,KAAD,CACEmC,WAAYF,EACZG,MAAO,GACPC,mBAAoBH,IAEtB,uBAEA,uCACA,cAAC,KAAD,CACEI,KAAK,KACLH,WAAYF,EACZG,MAAO,GACPC,mBAAoBH,IAEtB,uBAEA,sBAAK9B,UAAU,iBAAf,UACE,uCACA,cAAC,KAAD,CACEkC,KAAK,KACLH,WAAYF,EACZG,MAAO,GACPC,mBAAoBH,IAEtB,0BAGF,gDAAmBD,WAGvB,eAAC,IAAD,WACE,eAAC,IAAD,WACE,kDACA,iDAEF,eAAC,IAAD,WACE,0DACA,cAAC,KAAD,CACEE,WAAYF,EACZG,MAAO,GACPC,mBAAoBH,IAEtB,uBAEA,kDACA,cAAC,KAAD,CACEK,MAAM,SACNC,aAAa,aACbL,WAAYF,EACZG,MAAO,GACPC,mBAAoBH,IAEtB,uBAEA,uDACA,cAAC,KAAD,CACEK,MAAM,MACNJ,WAAYF,EACZG,MAAO,GACPC,mBAAoBH,IAEtB,uBAEA,gDAAmBD","file":"static/js/20.f2310e43.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CPagination\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\n\r\nconst Paginations = () => {\r\n  const [currentPage, setCurrentPage] = useState(2)\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Pagination\r\n          <DocsLink name=\"CPagination\"/>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Default</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Small</h6>\r\n          <CPagination\r\n            size=\"sm\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div className=\"d-md-down-none\">\r\n            <h6>Large</h6>\r\n            <CPagination\r\n              size=\"lg\"\r\n              activePage={currentPage}\r\n              pages={10}\r\n              onActivePageChange={setCurrentPage}\r\n            />\r\n            <br></br>\r\n          </div>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <strong> Pagination </strong>\r\n          <small>alignment</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Left alignment (default)</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Center alignment</h6>\r\n          <CPagination\r\n            align=\"center\"\r\n            addListClass=\"some-class\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Right (end) alignment</h6>\r\n          <CPagination\r\n            align=\"end\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Paginations\r\n"],"sourceRoot":""}