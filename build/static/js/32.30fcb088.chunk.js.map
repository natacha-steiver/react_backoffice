{"version":3,"sources":["_components/_crudPage/page.js","_components/Form/PageAddForm.js","_pages/PageAddPage.js","views/backoffice/pages/Pages.js"],"names":["styles","borderBottom","background","margin","padding","borderRadius","MyImageComponent","props","src","useImage","srcList","imgNew","style","maxWidth","Page","page","name","photo","id","dispatch","pages","useState","namesNew","setNames","setphotos","updateNew","setupdate","setdelete","setimg","useForm","register","handleSubmit","onSubmit","data","a","formdatas","FormData","append","fetch","method","headers","Accept","body","then","response","json","alert","type","crudConstants","UPDATE_PAGE","payload","className","encType","htmlFor","placeholder","onChange","event","target","value","display","fallback","ref","multiple","files","marginRight","onClick","deletepage","ConsoAddForm","useDispatch","useSelector","state","clickNew","setClick","showNew","setShow","setphoto","nameNew","setname","setTimeout","useEffect","e","fetchAllpages","formdata","concat","JSON","parse","document","cookie","ADD_PAGE","marginTop","paddingTop","boxShadow","textAlign","color","fontWeight","fontSize","paddingBottom","clear","console","log","stringify","length","map","index","PageAddPage","PageAddForm","Pages","href"],"mappings":"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","file":"static/js/32.30fcb088.chunk.js","sourcesContent":["\r\nimport React, { useState,Suspense }  from 'react';\r\n\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {updatepage,deletepage,fetchAllpages} from '../../_actions/crudActions';\r\nimport \"./scss/form.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { crudConstants } from '../../_constants/crudConstants';\r\nimport {useImage} from 'react-image';\r\nconst styles = {\r\n  borderBottom: '2px solid #eee',\r\n  background: '#fafafa',\r\n  margin: '.75rem auto',\r\n  padding: '.6rem 1rem',\r\n  //maxWidth: '90%',\r\n  borderRadius: '7px'\r\n};\r\nfunction MyImageComponent(props) {\r\n  const {src} = useImage({\r\n    srcList: `http://localhost:8000/images/${props.imgNew}`,\r\n  })\r\n\r\n  return <img src={src} style={{maxWidth:\"5rem\"}}/>\r\n}\r\nexport const Page=({ page: { name,photo, id },pages, dispatch }) => {\r\n\r\n  const [namesNew, setNames] = useState('');\r\n  const [photosNew, setphotos] = useState('');\r\n  const [pageNew, setpage] = useState('');\r\n  const [updateNew, setupdate] = useState(false);\r\n  const [deleteNew, setdelete] = useState(false);\r\n  const [imgNew, setimg] = useState(photo);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async(data) => {\r\n    let formdatas = new FormData()\r\n    formdatas.append('photo', data[\"image\"][0]);\r\n    formdatas.append('name',namesNew );\r\n    formdatas.append('id',id );\r\n    if(updateNew==true){\r\n      const res= await fetch(`http://localhost:8000/api/pages`,{method:'POST',headers: {\r\n               Accept: 'application/json',\r\n             },body:formdatas}).then(response=>\r\n        {\r\n          response.json().then(json => {\r\n          if(typeof(json[\"exception\"])!=\"undefined\" || typeof(json[\"errors\"])!=\"undefined\"){\r\n                      alert(\"erreur, vérifiez les champs entrés\");\r\n          }else{\r\n            setimg(json.photo);\r\n             dispatch({\r\n               type: crudConstants.UPDATE_PAGE,\r\n               payload: {\r\n                 id: json.id,\r\n                 name:json.name,\r\n                 photo:json.photo,\r\n               }\r\n\r\n             })\r\n          }\r\n\r\n          });\r\n\r\n\r\n        }\r\n      )\r\n\r\n    }\r\n          setupdate(false);\r\n     setdelete(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={ styles } className=\"container\">\r\n{      /*<h2>{ name }</h2>\r\n      <p>{ puissance }</p>\r\n  <p>page: { page }</p>\r\n*/}\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}  encType=\"multipart/form-data\" className=\"container col-lg-12 justify-content-center\">\r\n      <div className=\"form-group  col-lg-4 d-xs-block d-md-inline-block group-align\" >\r\n      <label htmlFor=\"name\" className=\"label-row \">Name:</label>\r\n      <input type=\"text\" name=\"name\"  placeholder={name}  onChange={event => setNames(event.target.value)}/>\r\n\r\n      </div>\r\n\r\n      <div className=\"form-group col-lg-4 d-xs-block d-md-inline-block group-align\" >\r\n      <label htmlFor=\"photo\" className=\"label-row\" style={{display:\"none\"}}>photo:</label>\r\n\r\n      <Suspense fallback={<div>Loading... </div>}>\r\n          <MyImageComponent imgNew={imgNew} />\r\n        </Suspense>\r\n      <input\r\n       type=\"file\"\r\n\r\n         id=\"image\"\r\n\r\n         ref={register}\r\n         name=\"image\"\r\n         multiple={false}\r\n         onChange={event => setphotos(event.target.files[0])}\r\n       />\r\n      </div>\r\n\r\n      <button style={{marginRight:\"1em\"}} className=\"btn btn-danger\" type=\"submit\" onClick={() =>{\r\n        setupdate(false);\r\n        setdelete(true);\r\n\r\n        dispatch(deletepage(id));\r\n\r\n      }} >\r\n        Remove\r\n      </button>\r\n\r\n\r\n      <button className=\"btn btn-success\" type=\"submit\" onClick={() =>\r\n    {\r\n\r\n      setupdate(true);\r\n      setdelete(false);\r\n    }\r\n\r\n        } >\r\n        Update\r\n      </button>\r\n\r\n\r\n      </form>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n","import {React,useEffect,useState} from 'react';\r\n//import { Formik, Field, Form, ErrorMessage, getIn } from 'formik';\r\n//import * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {Page} from \"../_crudPage/page\";\r\nimport { createpage,fetchAllpages,updatepage,deletepage} from '../../_actions/crudActions';\r\nimport { crudConstants } from '../../_constants/crudConstants';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ConsoAddForm = () => {\r\n    const dispatch = useDispatch();\r\n    const pages = useSelector(state => state.pages);\r\n    const [clickNew, setClick] = useState(false);\r\n    const [showNew, setShow] = useState(false);\r\n    const [photoNew, setphoto] = useState([]);\r\n    const [nameNew, setname] = useState('');\r\n    const triggerClick =e=>{\r\n    setClick(true);\r\n          dispatch(fetchAllpages());\r\n      }\r\n\r\n      setTimeout(()=>{\r\n         setShow(true);\r\n      },1700)\r\n\r\n     useEffect((e) => {\r\n\r\n         triggerClick();\r\n         setClick(false);\r\n       },[clickNew]);\r\n\r\n       const { register, handleSubmit } = useForm();\r\n\r\n        const onSubmit = async(data) => {\r\n          //console.log(data)\r\n          let formdata = new FormData()\r\n          formdata.append('photo', data[\"image\"][0]);\r\n          formdata.append('name',nameNew );\r\n           const res= await fetch(\"http://localhost:8000/api/pages\",{method:'POST',headers:{'Authorization': \"Bearer \".concat(JSON.parse(document.cookie)),\r\n                   'Content-Type': 'application/x-www-form-urlencoded'},body:formdata}).then(response=>\r\n             {\r\n               response.json().then(json => {\r\n                 //console.log(json);\r\n                  dispatch({\r\n                    type: crudConstants.ADD_PAGE,\r\n                    payload: {\r\n                      id: json.id,\r\n                      name:json.name,\r\n                      photo:json.photo,\r\n                    }\r\n\r\n                  })\r\n               });\r\n\r\n\r\n             }\r\n           )\r\n\r\n        };\r\n\r\n\r\n    return (\r\n        <section id=\"pageAddForm\" className=\"app-about-section angle-sp\" style={{marginTop:\"20em\", paddingTop: '0'}}>\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\" style={{ marginTop:\"-70px\"}}>\r\n                        <div className=\"col-md-12 col-lg-12\" style={{background: `#ffffff none repeat scroll 0 0`, boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',padding: \"30px\"}}>\r\n                        <p><span className=\"doubleLine-title\" style={{textAlign:\"left\", color:\"#ff063c\", fontWeight:\"300\", fontSize:\"2em\", paddingBottom: '30px'}}>Pages</span><span style={{clear:'both'}}></span></p>\r\n\r\n\r\n\r\n\r\n                                    <form onSubmit={handleSubmit(onSubmit)} id=\"form\"  encType=\"multipart/form-data\"  className=\"col-lg-12 justify-content-center\">\r\n                                        {/* <div className=\"col-lg-12\"> */}\r\n                                        <div  className=\"form-group col-lg-6 d-md-inline-block\" style={{ color:\"#3d009e\" }}>\r\n                                            <label htmlFor=\"name\">Nom</label>\r\n                                            <input name=\"name\" type=\"text\"  onChange={event => setname(event.target.value)}/>\r\n                                        </div>\r\n                                        <div  className=\"form-group col-lg-6 d-md-inline-block\" style={{ color:\"#3d009e\" }}>\r\n                                          {/*  <label htmlFor=\"photo\">Photo</label>\r\n                                            <Field name=\"photo\" type=\"text\" className=\"form-control\" />\r\n                                            <ErrorMessage name=\"photo\" />\r\n                                          */}\r\n                                          <input\r\n                                           type=\"file\"\r\n\r\n                                             id=\"image\"\r\n\r\n                                             ref={register}\r\n                                             name=\"image\"\r\n                                             multiple={false}\r\n                                             onChange={event => setphoto(event.target.files[0])}\r\n                                           />\r\n                                        </div>\r\n                                        <button  type=\"submit\" className=\"btn btn-primary d-block\" style={{margin:\"1em auto\"}} >add page</button>\r\n\r\n                                    </form>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n          {  showNew==true &&    <div>\r\n\r\n            <button style={{display:\"none\"}}  className=\"btn btn-primary\" onClick={()=>{\r\n              dispatch(fetchAllpages());\r\n              console.log(\"page1:\"+JSON.stringify(pages));\r\n\r\n            }}>voir</button>\r\n                {\r\n\r\n\r\n                  pages.length>0  && pages.map((page,index )=> {\r\n                    return (\r\n\r\n                      <Page page={page } key={page.id} pages={pages} dispatch={dispatch} />\r\n\r\n                    );\r\n                  })\r\n\r\n\r\n\r\n            }\r\n\r\n            </div>}\r\n        </section>\r\n\r\n   );\r\n};\r\n\r\nexport default ConsoAddForm;\r\n","import React,{ useState,useEffect } from 'react';\r\n\r\nimport PageAddForm from '../_components/Form/PageAddForm';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport { history } from '../_helpers/history';\r\n//import classes from './RegisterPage.module.scss';\r\n\r\nconst PageAddPage = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n            <PageAddForm />\r\n\r\n    );\r\n}\r\n\r\nexport default PageAddPage;\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport classNames from 'classnames'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody\r\n} from '@coreui/react'\r\nimport { rgbToHex } from '@coreui/utils'\r\nimport { DocsLink } from 'src/reusable'\r\nimport PageAddPage from \"../../../_pages/PageAddPage\"\r\n\r\nconst ThemeView = () => {\r\n  const [color, setColor] = useState('rgb(255, 255, 255)')\r\n  const ref = createRef()\r\n\r\n  useEffect(() => {\r\n    const el = ref.current.parentNode.firstChild\r\n    const varColor = window.getComputedStyle(el).getPropertyValue('background-color')\r\n    setColor(varColor)\r\n  }, [ref])\r\n\r\n  return (\r\n    <table className=\"table w-100\" ref={ref}>\r\n      <tbody>\r\n      <tr>\r\n        <td className=\"text-muted\">HEX:</td>\r\n        <td className=\"font-weight-bold\">{ rgbToHex(color) }</td>\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-muted\">RGB:</td>\r\n        <td className=\"font-weight-bold\">{ color }</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst ThemeColor = ({className, children}) => {\r\n  const classes = classNames(className, 'theme-color w-75 rounded mb-3')\r\n  return (\r\n    <CCol xl=\"2\" md=\"4\" sm=\"6\" xs=\"12\" className=\"mb-4\">\r\n      <div className={classes} style={{paddingTop: '75%'}}></div>\r\n      {children}\r\n      <ThemeView/>\r\n    </CCol>\r\n  )\r\n}\r\n\r\nconst Pages = () => {\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Pages - gestion\r\n          <DocsLink href=\"https://coreui.io/docs/utilities/colors/\"/>\r\n        </CCardHeader>\r\n        <PageAddPage/>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pages\r\n"],"sourceRoot":""}