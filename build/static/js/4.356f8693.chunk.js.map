{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@coreui/utils/dist/coreui-utils.common.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/regenerator/index.js","../../src/utils/isHTMLElement.ts","../../src/constants.ts","../../src/logic/attachEventListeners.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isObject.ts","../../src/utils/isKey.ts","../../src/utils/compact.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/transformToNestObject.ts","../../src/utils/isUndefined.ts","../../src/utils/get.ts","../../src/logic/focusOnErrorField.ts","../../src/logic/removeAllEventListeners.ts","../../src/logic/getRadioValue.ts","../../src/utils/isRadioInput.ts","../../src/utils/isFileInput.ts","../../src/utils/isCheckBoxInput.ts","../../src/utils/isMultipleSelect.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/utils/isDetached.ts","../../src/utils/isEmptyObject.ts","../../src/utils/isBoolean.ts","../../src/utils/unset.ts","../../src/logic/findRemovedFieldAndRemoveListener.ts","../../src/utils/isPrimitive.ts","../../src/utils/deepMerge.ts","../../src/utils/deepEqual.ts","../../src/logic/setFieldArrayDirtyFields.ts","../../src/utils/isString.ts","../../src/logic/getFieldsValues.ts","../../src/logic/isErrorStateChanged.ts","../../src/utils/isRegex.ts","../../src/logic/getValueAndMessage.ts","../../src/utils/isFunction.ts","../../src/utils/isMessage.ts","../../src/logic/getValidateError.ts","../../src/logic/appendErrors.ts","../../src/logic/validateField.ts","../../src/utils/getPath.ts","../../src/logic/assignWatchFields.ts","../../src/logic/skipValidation.ts","../../src/logic/getNodeParentName.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/isSelectInput.ts","../../src/utils/onDomRemove.ts","../../src/utils/isWeb.ts","../../src/utils/cloneObject.ts","../../src/utils/validationModeChecker.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/useForm.ts","../../src/useFormContext.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/react-image/umd/index.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/defineProperty.js"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","e","t","n","exports","r","o","l","m","c","d","Object","defineProperty","enumerable","get","toStringTag","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","u","a","f","g","keys","assign","document","styleSheets","cssRules","selectorText","cssText","substring","lastIndexOf","split","forEach","concat","trim","Boolean","documentMode","match","arguments","body","window","getComputedStyle","getPropertyValue","replace","Error","parseInt","slice","Math","random","toString","substr","includes","b","deepObjectsMerge","getColor","getStyle","hexToRgb","hexToRgba","makeUid","omitByKeys","pickByKeys","rgbToHex","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","apply","undefined","module","HTMLElement","EVENTS","VALIDATION_MODE","SELECT","UNDEFINED","INPUT_VALIDATION_RULES","attachEventListeners","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","addEventListener","isObjectType","isNullOrUndefined","Date","test","filter","input","compact","set","object","path","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isObject","isNaN","data","val","obj","defaultValue","result","reduce","isUndefined","fields","fieldErrors","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","previous","option","checked","element","type","defaultResult","validResult","values","map","attributes","getFieldValue","fieldsRef","name","shallowFieldsStateRef","excludeDisabled","shouldKeepRawValue","current","disabled","valueAsNumber","valueAsDate","setValueAs","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","NaN","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","unset","previousObjRef","updatePath","childObject","baseGet","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isBoolean","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","fieldRef","isCheckBoxInput","removeAllEventListeners","deepMerge","target","source","isPrimitive","targetValue","sourceValue","deepEqual","object1","object2","isErrorObject","React.isValidElement","keys1","keys2","val1","val2","setDirtyFields","defaultValues","dirtyFields","parentName","shallowFieldsState","search","output","isString","startsWith","find","transformToNestObject","errors","validFields","fieldsWithValidation","previousError","RegExp","validationData","isRegex","message","getValidateError","isMessage","validateAllFieldCriteria","types","required","maxLength","minLength","min","max","pattern","validate","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","maxOutput","minOutput","valueDate","exceedMin","valueNumber","parseFloat","maxLengthOutput","minLengthOutput","patternValue","getFieldsValue","validateRef","isFunction","validateError","validationResult","entries","validateFunction","validateResult","getPath","rootPath","paths","property","rootName","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","indexOf","isMatchFieldArrayName","searchName","names","some","onDomRemove","removeFieldEventListenerAndRef","observer","MutationObserver","observe","childList","subtree","cloneObject","copy","isWeb","File","constructor","getTime","Set","Map","mode","isOnSubmit","isWindowUndefined","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","shouldFocusError","criteriaMode","React.useRef","fieldArrayDefaultValuesRef","fieldArrayValuesRef","watchFieldsRef","useWatchFieldsRef","useWatchRenderFunctionsRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","modeChecker","isValidateAllFieldCriteria","React.useState","isDirty","isValidating","submitCount","touched","isSubmitting","isSubmitSuccessful","formState","setFormState","readFormStateRef","formStateRef","observerRef","updateFormState","React.useCallback","state","updateIsValidating","shouldRenderBaseOnError","shouldRender","shouldReRender","isErrorStateChanged","setFieldValue","rawValue","radioRef","selectRef","checkboxRef","isFormDirty","formValues","getValues","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","previousIsDirty","isChanged","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","previousFormIsValid","isInputsValid","every","trigger","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","has","getNodeParentName","setFieldArrayDirtyFields","isFieldWatched","renderWatchedInputs","found","size","setValue","setFieldArrayDefaultValues","payload","getFieldsValues","shouldSkipValidation","skipValidation","parentNodeName","currentError","validateResolver","newDefaultValues","removeFieldEventListener","updateWatchedValue","clearErrors","inputName","setError","shouldFocus","watchInternal","fieldNames","watchId","assignWatchFields","combinedDefaultValues","watch","unregister","registerFieldRef","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","isFieldArray","isNameInFieldArray","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","isSelectInput","register","refOrRegisterOptions","handleSubmit","onValid","onInvalid","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","reset","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","disconnect","commonProps","prop","control","React.useMemo","FormContext","React.createContext","displayName","_createForOfIteratorHelper","allowArrayLike","it","F","normalCompletion","didErr","step","_e2","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","srcList","imgPromise","j","decode","useSuspense","h","useState","q","join","promise","cache","src","isLoading","loader","unloader","container","loaderContainer","unloaderContainer","crossorigin","v","w","x","y","crossOrigin","z","A","createElement","Image","onload","onerror","shift","Img","useImage","require","excluded","sourceKeys","configurable","writable"],"mappings":"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","file":"static/js/4.356f8693.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";n.r(t),n.d(t,\"deepObjectsMerge\",(function(){return r})),n.d(t,\"getColor\",(function(){return u})),n.d(t,\"getStyle\",(function(){return a})),n.d(t,\"hexToRgb\",(function(){return s})),n.d(t,\"hexToRgba\",(function(){return l})),n.d(t,\"makeUid\",(function(){return f})),n.d(t,\"omitByKeys\",(function(){return d})),n.d(t,\"pickByKeys\",(function(){return p})),n.d(t,\"rgbToHex\",(function(){return g}));var r=function e(t,n){for(var r=0,o=Object.keys(n);r<o.length;r++){var c=o[r];n[c]instanceof Object&&Object.assign(n[c],e(t[c],n[c]))}return Object.assign(t||{},n),t},o=function(){for(var e={},t=document.styleSheets,n=\"\",r=t.length-1;r>-1;r--){for(var o=t[r].cssRules,c=o.length-1;c>-1;c--)if(\".ie-custom-properties\"===o[c].selectorText){n=o[c].cssText;break}if(n)break}return(n=n.substring(n.lastIndexOf(\"{\")+1,n.lastIndexOf(\"}\"))).split(\";\").forEach((function(t){if(t){var n=t.split(\": \")[0],r=t.split(\": \")[1];n&&r&&(e[\"--\".concat(n.trim())]=r.trim())}})),e},c=function(){return Boolean(document.documentMode)&&document.documentMode>=10},i=function(e){return e.match(/^--.*/i)},a=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document.body;if(i(e)&&c()){var r=o();t=r[e]}else t=window.getComputedStyle(n,null).getPropertyValue(e).replace(/^\\s/,\"\");return t},u=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document.body,n=\"--\".concat(e),r=a(n,t);return r||e},s=function(e){if(void 0===e)throw new TypeError(\"Hex color is not defined\");var t,n,r;if(!e.match(/^#(?:[0-9a-f]{3}){1,2}$/i))throw new Error(\"\".concat(e,\" is not a valid hex color\"));return 7===e.length?(t=parseInt(e.slice(1,3),16),n=parseInt(e.slice(3,5),16),r=parseInt(e.slice(5,7),16)):(t=parseInt(e.slice(1,2),16),n=parseInt(e.slice(2,3),16),r=parseInt(e.slice(3,5),16)),\"rgba(\".concat(t,\", \").concat(n,\", \").concat(r,\")\")},l=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100;if(void 0===e)throw new TypeError(\"Hex color is not defined\");var n,r,o,c=e.match(/^#(?:[0-9a-f]{3}){1,2}$/i);if(!c)throw new Error(\"\".concat(e,\" is not a valid hex color\"));return 7===e.length?(n=parseInt(e.slice(1,3),16),r=parseInt(e.slice(3,5),16),o=parseInt(e.slice(5,7),16)):(n=parseInt(e.slice(1,2),16),r=parseInt(e.slice(2,3),16),o=parseInt(e.slice(3,5),16)),\"rgba(\".concat(n,\", \").concat(r,\", \").concat(o,\", \").concat(t/100,\")\")},f=function(){return\"uid-\"+Math.random().toString(36).substr(2)},d=function(e,t){for(var n={},r=Object.keys(e),o=0;o<r.length;o++)!t.includes(r[o])&&(n[r[o]]=e[r[o]]);return n},p=function(e,t){for(var n={},r=0;r<t.length;r++)n[t[r]]=e[t[r]];return n},g=function(e){if(void 0===e)throw new TypeError(\"Hex color is not defined\");if(\"transparent\"===e)return\"#00000000\";var t=e.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);if(!t)throw new Error(\"\".concat(e,\" is not a valid rgb color\"));var n=\"0\".concat(parseInt(t[1],10).toString(16)),r=\"0\".concat(parseInt(t[2],10).toString(16)),o=\"0\".concat(parseInt(t[3],10).toString(16));return\"#\".concat(n.slice(-2)).concat(r.slice(-2)).concat(o.slice(-2))},b={deepObjectsMerge:r,getColor:u,getStyle:a,hexToRgb:s,hexToRgba:l,makeUid:f,omitByKeys:d,pickByKeys:p,rgbToHex:g};t.default=b}]));","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent?: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","import isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","export default (value: string) => /^\\w*$/.test(value);\n","export default (value: any[]) => value.filter(Boolean);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(\n    input\n      .replace(/[\"|']/g, '')\n      .replace(/\\[/g, '.')\n      .replace(/\\]/g, '')\n      .split('.'),\n  );\n","import isObject from './isObject';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types';\n\nexport default (data: FieldValues, value: Record<string, any> = {}): any => {\n  for (const key in data) {\n    !isKey(key) ? set(value, key, data[key]) : (value[key] = data[key]);\n  }\n  return value;\n};\n","export default (val: unknown): val is undefined => val === undefined;\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport compact from './compact';\n\nexport default (obj: any = {}, path: string, defaultValue?: unknown) => {\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport isUndefined from '../utils/isUndefined';\nimport { FieldErrors, FieldRefs } from '../types';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus && isUndefined(field.ref.focus())) {\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import { RadioOrCheckboxOption } from '../types';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport get from '../utils/get';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  shallowFieldsStateRef?: React.MutableRefObject<Partial<FieldValues>>,\n  excludeDisabled?: boolean,\n  shouldKeepRawValue?: boolean,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value, disabled },\n      ref,\n      valueAsNumber,\n      valueAsDate,\n      setValueAs,\n    } = field;\n\n    if (disabled && excludeDisabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return shouldKeepRawValue\n      ? value\n      : valueAsNumber\n      ? value === ''\n        ? NaN\n        : +value\n      : valueAsDate\n      ? (ref as HTMLInputElement).valueAsDate\n      : setValueAs\n      ? setValueAs(value)\n      : value;\n  }\n\n  if (shallowFieldsStateRef) {\n    return get(shallowFieldsStateRef.current, name);\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { Ref } from '../types';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport set from '../utils/set';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport unset from '../utils/unset';\nimport compact from '../utils/compact';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  shallowFieldsStateRef: React.MutableRefObject<FieldValues>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name },\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n\n    !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\n  }\n\n  if (!ref.type || !fieldRef) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if (isRadioInput(ref) || isCheckBoxInput(ref)) {\n    if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\n      compact(fieldRef.options).forEach((option = {}, index): void => {\n        if (\n          (isDetached(option.ref) && isSameRef(option, option.ref)) ||\n          forceDelete\n        ) {\n          removeAllEventListeners(option.ref, handleChange);\n          unset(fieldRef.options, `[${index}]`);\n        }\n      });\n\n      if (fieldRef.options && !compact(fieldRef.options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    delete fieldsRef.current[name];\n  }\n}\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] =\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\n          ? deepMerge(targetValue, sourceValue)\n          : sourceValue;\n    } catch {}\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport isObject from '../utils/isObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(\n  object1: any,\n  object2: any,\n  isErrorObject?: boolean,\n) {\n  if (\n    isPrimitive(object1) ||\n    isPrimitive(object2) ||\n    object1 instanceof Date ||\n    object2 instanceof Date\n  ) {\n    return object1 === object2;\n  }\n\n  if (!React.isValidElement(object1)) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      const val1 = object1[key];\n\n      if (!(isErrorObject && key === 'ref')) {\n        const val2 = object2[key];\n\n        if (\n          (isObject(val1) || Array.isArray(val1)) &&\n          (isObject(val2) || Array.isArray(val2))\n            ? !deepEqual(val1, val2, isErrorObject)\n            : val1 !== val2\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n","import { get } from '../utils';\nimport set from '../utils/set';\nimport { deepMerge } from '../utils/deepMerge';\nimport deepEqual from '../utils/deepEqual';\n\nfunction setDirtyFields<\n  T extends Record<string, unknown>[],\n  U extends Record<string, unknown>[],\n  K extends Record<string, boolean | []>\n>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n  parentNode?: K,\n  parentName?: keyof K,\n) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(\n          values[index][key] as T,\n          get(defaultValues[index] || {}, key, []),\n          dirtyFields[index][key] as [],\n          dirtyFields[index],\n          key,\n        );\n      } else {\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n          ? set(dirtyFields[index] || {}, key)\n          : (dirtyFields[index] = {\n              ...dirtyFields[index],\n              [key]: true,\n            });\n      }\n    }\n\n    parentNode &&\n      !dirtyFields.length &&\n      delete parentNode[parentName as keyof K];\n  }\n\n  return dirtyFields;\n}\n\nexport default <T extends U, U extends Record<string, unknown>[]>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n) =>\n  deepMerge(\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\n  );\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  shallowFieldsState: Record<string, any>,\n  shouldUnregister: boolean,\n  excludeDisabled?: boolean,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : Array.isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n        undefined,\n        excludeDisabled,\n      );\n    }\n  }\n\n  return shouldUnregister\n    ? transformToNestObject(output)\n    : deepMerge(shallowFieldsState, transformToNestObject(output));\n};\n","import get from '../utils/get';\nimport isUndefined from '../utils/isUndefined';\nimport deepEqual from '../utils/deepEqual';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldError,\n} from '../types';\n\nexport default <TFieldValues extends FieldValues>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FieldError | undefined;\n  name: InternalFieldName<TFieldValues>;\n  validFields: FieldNamesMarkedBoolean<TFieldValues>;\n  fieldsWithValidation: FieldNamesMarkedBoolean<TFieldValues>;\n}): boolean => {\n  const isValid = isUndefined(error);\n  const previousError = get(errors, name);\n\n  return (\n    (isValid && !!previousError) ||\n    (!isValid && !deepEqual(previousError, error, true)) ||\n    (isValid && get(fieldsWithValidation, name) && !get(validFields, name))\n  );\n};\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule } from '../types';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import * as React from 'react';\nimport isString from '../utils/isString';\nimport { Message } from '../types';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  InternalFieldErrors,\n} from '../types';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  InternalFieldErrors,\n} from '../types';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  shallowFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<InternalFieldErrors<TFieldValues>> => {\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: InternalFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: isRadioOrCheckbox\n          ? (((fieldsRef.current[name] as Field).options || [])[0] || {}).ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if ((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && value !== '') {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(value)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      value.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      value.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && pattern && !isEmpty) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(\n      fieldsRef,\n      name,\n      shallowFieldsStateRef,\n      false,\n      true,\n    );\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldName } from '../types';\n\nexport const getPath = <TFieldValues>(\n  rootPath: FieldName<TFieldValues>,\n  values: any,\n  paths: FieldName<TFieldValues>[] = [],\n): FieldName<TFieldValues>[] => {\n  for (const property in values) {\n    const rootName = (rootPath +\n      (isObject(values)\n        ? `.${property}`\n        : `[${property}]`)) as FieldName<TFieldValues>;\n\n    isPrimitive(values[property])\n      ? paths.push(rootName)\n      : getPath(rootName, values[property], paths);\n  }\n\n  return paths;\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport {\n  DeepPartial,\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value = undefined;\n\n  watchFields.add(fieldName);\n\n  if (!isEmptyObject(fieldValues)) {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || Array.isArray(value)) {\n      getPath(fieldName, value).forEach((name) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import { FieldValues, InternalFieldName } from '../types';\n\nexport const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}([|.)\\\\d+`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (\n  names: Set<InternalFieldName<FieldValues>>,\n  name: InternalFieldName<FieldValues>,\n) => [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import * as React from 'react';\nimport { Field, FieldRefs } from '../types';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove<TFieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  removeFieldEventListenerAndRef: (\n    field: Field | undefined,\n    forceDelete?: boolean,\n  ) => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    for (const field of Object.values(fieldsRef.current)) {\n      if (field && field.options) {\n        for (const option of field.options) {\n          if (option && option.ref && isDetached(option.ref)) {\n            removeFieldEventListenerAndRef(field);\n          }\n        }\n      } else if (field && isDetached(field.ref)) {\n        removeFieldEventListenerAndRef(field);\n      }\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { UNDEFINED } from '../constants';\n\nexport default typeof window !== UNDEFINED && typeof document !== UNDEFINED;\n","import isPrimitive from './isPrimitive';\nimport isHTMLElement from './isHTMLElement';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T extends unknown>(data: T): T {\n  let copy: any;\n\n  if (\n    isPrimitive(data) ||\n    (isWeb && (data instanceof File || isHTMLElement(data)))\n  ) {\n    return data;\n  }\n\n  if (\n    !['Set', 'Map', 'Object', 'Date', 'Array'].includes(\n      (data as Object).constructor?.name,\n    )\n  ) {\n    return data;\n  }\n\n  if (data instanceof Date) {\n    copy = new Date(data.getTime());\n    return copy;\n  }\n\n  if (data instanceof Set) {\n    copy = new Set();\n    for (const item of data) {\n      copy.add(item);\n    }\n    return copy;\n  }\n\n  if (data instanceof Map) {\n    copy = new Map();\n    for (const key of data.keys()) {\n      copy.set(key, cloneObject(data.get(key)));\n    }\n    return copy;\n  }\n\n  copy = Array.isArray(data) ? [] : {};\n\n  for (const key in data) {\n    copy[key] = cloneObject(data[key]);\n  }\n\n  return copy;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport setFieldArrayDirtyFields from './logic/setFieldArrayDirtyFields';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport isErrorStateChanged from './logic/isErrorStateChanged';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getNodeParentName from './logic/getNodeParentName';\nimport deepEqual from './utils/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport onDomRemove from './utils/onDomRemove';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isString from './utils/isString';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport isKey from './utils/isKey';\nimport cloneObject from './utils/cloneObject';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport compact from './utils/compact';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isWeb from './utils/isWeb';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  RegisterOptions,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  SetValueConfig,\n  ErrorOption,\n  FormState,\n  SubmitErrorHandler,\n  FieldNamesMarkedBoolean,\n  LiteralToPrimitive,\n  DeepPartial,\n  InternalNameSet,\n  DefaultValues,\n  FieldError,\n  SetFieldValue,\n  FieldArrayDefaultValues,\n  ResetFieldArrayFunctionRef,\n  UseWatchRenderFunctions,\n  RecordInternalNameSet,\n} from './types';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as DefaultValues<TFieldValues>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const fieldArrayDefaultValuesRef = React.useRef<FieldArrayDefaultValues>({});\n  const fieldArrayValuesRef = React.useRef<FieldArrayDefaultValues>({});\n  const watchFieldsRef = React.useRef<InternalNameSet<TFieldValues>>(new Set());\n  const useWatchFieldsRef = React.useRef<RecordInternalNameSet<TFieldValues>>(\n    {},\n  );\n  const useWatchRenderFunctionsRef = React.useRef<UseWatchRenderFunctions>({});\n  const fieldsWithValidationRef = React.useRef<\n    FieldNamesMarkedBoolean<TFieldValues>\n  >({});\n  const validFieldsRef = React.useRef<FieldNamesMarkedBoolean<TFieldValues>>(\n    {},\n  );\n  const defaultValuesRef = React.useRef<DefaultValues<TFieldValues>>(\n    defaultValues,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const shallowFieldsStateRef = React.useRef({});\n  const resetFieldArrayFunctionRef = React.useRef<\n    ResetFieldArrayFunctionRef<TFieldValues>\n  >({});\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<InternalNameSet<TFieldValues>>(\n    new Set(),\n  );\n  const modeRef = React.useRef(modeChecker(mode));\n  const { isOnSubmit, isOnTouch } = modeRef.current;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const [formState, setFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touched: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: !isOnSubmit,\n    errors: {},\n  });\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isValidating: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const formStateRef = React.useRef(formState);\n  const observerRef = React.useRef<MutationObserver | undefined>();\n  const {\n    isOnBlur: isReValidateOnBlur,\n    isOnChange: isReValidateOnChange,\n  } = React.useRef(modeChecker(reValidateMode)).current;\n\n  contextRef.current = context;\n  resolverRef.current = resolver;\n  formStateRef.current = formState;\n  shallowFieldsStateRef.current = shouldUnregister\n    ? {}\n    : isEmptyObject(shallowFieldsStateRef.current)\n    ? cloneObject(defaultValues)\n    : shallowFieldsStateRef.current;\n\n  const updateFormState = React.useCallback(\n    (state: Partial<FormState<TFieldValues>> = {}) => {\n      if (!isUnMount.current) {\n        formStateRef.current = {\n          ...formStateRef.current,\n          ...state,\n        };\n        setFormState(formStateRef.current);\n      }\n    },\n    [],\n  );\n\n  const updateIsValidating = () =>\n    readFormStateRef.current.isValidating &&\n    updateFormState({\n      isValidating: true,\n    });\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FieldError | undefined,\n      shouldRender: boolean | null = false,\n      state: {\n        dirtyFields?: FieldNamesMarkedBoolean<TFieldValues>;\n        isDirty?: boolean;\n        touched?: FieldNamesMarkedBoolean<TFieldValues>;\n      } = {},\n      isValid?: boolean,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        isErrorStateChanged<TFieldValues>({\n          errors: formStateRef.current.errors,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(formStateRef.current.errors, name);\n\n      if (error) {\n        unset(validFieldsRef.current, name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !deepEqual(previousError, error, true);\n        set(formStateRef.current.errors, name, error);\n      } else {\n        if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n          set(validFieldsRef.current, name, true);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        unset(formStateRef.current.errors, name);\n      }\n\n      if (\n        (shouldReRender && !isNullOrUndefined(shouldRender)) ||\n        !isEmptyObject(state) ||\n        readFormStateRef.current.isValidating\n      ) {\n        updateFormState({\n          ...state,\n          ...(resolverRef.current ? { isValid: !!isValid } : {}),\n          isValidating: false,\n        });\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (name: FieldName<TFieldValues>, rawValue: SetFieldValue<TFieldValues>) => {\n      const { ref, options } = fieldsRef.current[name] as Field;\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref)) {\n        (options || []).forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string[]).includes(\n              selectRef.value,\n            )),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = Array.isArray(value)\n                  ? !!(value as []).find(\n                      (data: string) => data === checkboxRef.value,\n                    )\n                  : value === checkboxRef.value),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const isFormDirty = React.useCallback(\n    (name?: string, data?: unknown[]): boolean => {\n      if (readFormStateRef.current.isDirty) {\n        const formValues = getValues();\n\n        name && data && set(formValues, name, data);\n\n        return !deepEqual(formValues, defaultValuesRef.current);\n      }\n\n      return false;\n    },\n    [],\n  );\n\n  const updateAndGetDirtyState = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      shouldRender = true,\n    ): Partial<\n      Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touched'>\n    > => {\n      if (\n        readFormStateRef.current.isDirty ||\n        readFormStateRef.current.dirtyFields\n      ) {\n        const isFieldDirty = !deepEqual(\n          get(defaultValuesRef.current, name),\n          getFieldValue(fieldsRef, name, shallowFieldsStateRef),\n        );\n        const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\n        const previousIsDirty = formStateRef.current.isDirty;\n\n        isFieldDirty\n          ? set(formStateRef.current.dirtyFields, name, true)\n          : unset(formStateRef.current.dirtyFields, name);\n\n        const state = {\n          isDirty: isFormDirty(),\n          dirtyFields: formStateRef.current.dirtyFields,\n        };\n\n        const isChanged =\n          (readFormStateRef.current.isDirty &&\n            previousIsDirty !== state.isDirty) ||\n          (readFormStateRef.current.dirtyFields &&\n            isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\n\n        isChanged && shouldRender && updateFormState(state);\n\n        return isChanged ? state : {};\n      }\n\n      return {};\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean | null,\n    ): Promise<boolean> => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!fieldsRef.current[name]) {\n          console.warn('📋 Field is missing with `name` attribute: ', name);\n          return false;\n        }\n      }\n\n      const error = (\n        await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          shallowFieldsStateRef,\n        )\n      )[name];\n\n      shouldRenderBaseOnError(name, error, skipReRender);\n\n      return isUndefined(error);\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      names:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues(),\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = formStateRef.current.isValid;\n\n      if (Array.isArray(names)) {\n        const isInputsValid = names\n          .map((name) => {\n            const error = get(errors, name);\n\n            error\n              ? set(formStateRef.current.errors, name, error)\n              : unset(formStateRef.current.errors, name);\n\n            return !error;\n          })\n          .every(Boolean);\n\n        updateFormState({\n          isValid: isEmptyObject(errors),\n          isValidating: false,\n        });\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, names);\n\n        shouldRenderBaseOnError(\n          names,\n          error,\n          previousFormIsValid !== isEmptyObject(errors),\n          {},\n          isEmptyObject(errors),\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      updateIsValidating();\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (Array.isArray(fields)) {\n        !name && (formStateRef.current.errors = {});\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, null)),\n        );\n        updateFormState({\n          isValidating: false,\n        });\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: FieldName<TFieldValues>,\n      value: SetFieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      const data = {};\n      set(data, name, value);\n\n      for (const fieldName of getPath(name, value)) {\n        if (fieldsRef.current[fieldName]) {\n          setFieldValue(fieldName, get(data, fieldName));\n          shouldDirty && updateAndGetDirtyState(fieldName);\n          shouldValidate && trigger(fieldName as FieldName<TFieldValues>);\n        }\n      }\n    },\n    [trigger, setFieldValue, updateAndGetDirtyState],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: FieldName<TFieldValues>,\n      value: SetFieldValue<TFieldValues>,\n      config: SetValueConfig,\n    ) => {\n      !shouldUnregister &&\n        !isPrimitive(value) &&\n        set(\n          shallowFieldsStateRef.current,\n          name,\n          Array.isArray(value) ? [...value] : { ...value },\n        );\n\n      if (fieldsRef.current[name]) {\n        setFieldValue(name, value);\n        config.shouldDirty && updateAndGetDirtyState(name);\n        config.shouldValidate && trigger(name as any);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n\n        if (fieldArrayNamesRef.current.has(name)) {\n          const parentName = getNodeParentName(name) || name;\n          set(fieldArrayDefaultValuesRef.current, name, value);\n\n          resetFieldArrayFunctionRef.current[parentName]({\n            [parentName]: get(fieldArrayDefaultValuesRef.current, parentName),\n          } as UnpackNestedValue<DeepPartial<TFieldValues>>);\n\n          if (\n            (readFormStateRef.current.isDirty ||\n              readFormStateRef.current.dirtyFields) &&\n            config.shouldDirty\n          ) {\n            set(\n              formStateRef.current.dirtyFields,\n              name,\n              setFieldArrayDirtyFields(\n                value,\n                get(defaultValuesRef.current, name, []),\n                get(formStateRef.current.dirtyFields, name, []),\n              ),\n            );\n\n            updateFormState({\n              isDirty: !deepEqual(\n                { ...getValues(), [name]: value },\n                defaultValuesRef.current,\n              ),\n            });\n          }\n        }\n      }\n\n      !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\n    },\n    [updateAndGetDirtyState, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = <T extends FieldName<TFieldValues>>(name: T) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = <T extends FieldName<FieldValues>>(\n    name: T,\n  ): boolean => {\n    let found = true;\n\n    if (!isEmptyObject(useWatchFieldsRef.current)) {\n      for (const key in useWatchFieldsRef.current) {\n        if (\n          !name ||\n          !useWatchFieldsRef.current[key].size ||\n          useWatchFieldsRef.current[key].has(name) ||\n          useWatchFieldsRef.current[key].has(getNodeParentName(name))\n        ) {\n          useWatchRenderFunctionsRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue(\n    name: FieldName<TFieldValues>,\n    value: SetFieldValue<TFieldValues>,\n    config?: SetValueConfig,\n  ): void {\n    setInternalValue(name, value, config || {});\n    isFieldWatched(name) && updateFormState();\n    renderWatchedInputs(name);\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        let name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error;\n        let isValid;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation = skipValidation({\n            isBlurEvent,\n            isReValidateOnChange,\n            isReValidateOnBlur,\n            isTouched: !!get(formStateRef.current.touched, name),\n            isSubmitted: formStateRef.current.isSubmitted,\n            ...modeRef.current,\n          });\n          let state = updateAndGetDirtyState(name, false);\n          let shouldRender =\n            !isEmptyObject(state) ||\n            (!isBlurEvent && isFieldWatched(name as FieldName<TFieldValues>));\n\n          if (\n            isBlurEvent &&\n            !get(formStateRef.current.touched, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(formStateRef.current.touched, name, true);\n            state = {\n              ...state,\n              touched: formStateRef.current.touched,\n            };\n          }\n\n          if (!shouldUnregister && isCheckBoxInput(target as Ref)) {\n            set(\n              shallowFieldsStateRef.current,\n              name,\n              getFieldValue(fieldsRef, name),\n            );\n          }\n\n          if (shouldSkipValidation) {\n            !isBlurEvent && renderWatchedInputs(name);\n            return (\n              (!isEmptyObject(state) ||\n                (shouldRender && isEmptyObject(state))) &&\n              updateFormState(state)\n            );\n          }\n\n          updateIsValidating();\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues(),\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = formStateRef.current.isValid;\n            error = get(errors, name);\n\n            if (\n              isCheckBoxInput(target as Ref) &&\n              !error &&\n              resolverRef.current\n            ) {\n              const parentNodeName = getNodeParentName(name);\n              const currentError = get(errors, parentNodeName, {});\n              currentError.type &&\n                currentError.message &&\n                (error = currentError);\n\n              if (\n                parentNodeName &&\n                (currentError ||\n                  get(formStateRef.current.errors, parentNodeName))\n              ) {\n                name = parentNodeName;\n              }\n            }\n\n            isValid = isEmptyObject(errors);\n\n            previousFormIsValid !== isValid && (shouldRender = true);\n          } else {\n            error = (\n              await validateField<TFieldValues>(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                shallowFieldsStateRef,\n              )\n            )[name];\n          }\n\n          !isBlurEvent && renderWatchedInputs(name);\n          shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n        }\n      };\n\n  function setFieldArrayDefaultValues<T extends FieldValues>(data: T): T {\n    if (!shouldUnregister) {\n      let copy = cloneObject(data);\n\n      for (const value of fieldArrayNamesRef.current) {\n        if (isKey(value) && !copy[value]) {\n          copy = {\n            ...copy,\n            [value]: [],\n          };\n        }\n      }\n\n      return copy;\n    }\n    return data;\n  }\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\n    }\n\n    if (Array.isArray(payload)) {\n      const data = {};\n\n      for (const name of payload) {\n        set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      }\n\n      return data;\n    }\n\n    return setFieldArrayDefaultValues(\n      getFieldsValues(\n        fieldsRef,\n        cloneObject(shallowFieldsStateRef.current),\n        shouldUnregister,\n      ),\n    );\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const newDefaultValues = isEmptyObject(fieldsRef.current)\n        ? defaultValuesRef.current\n        : {};\n\n      const { errors } =\n        (await resolverRef.current!(\n          {\n            ...newDefaultValues,\n            ...getValues(),\n            ...values,\n          },\n          contextRef.current,\n          isValidateAllFieldCriteria,\n        )) || {};\n      const isValid = isEmptyObject(errors);\n\n      formStateRef.current.isValid !== isValid &&\n        updateFormState({\n          isValid,\n        });\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) => {\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        shallowFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      );\n\n      if (shouldUnregister) {\n        unset(validFieldsRef.current, field.ref.name);\n        unset(fieldsWithValidationRef.current, field.ref.name);\n      }\n    },\n    [shouldUnregister],\n  );\n\n  const updateWatchedValue = React.useCallback((name: string) => {\n    if (isWatchAllRef.current) {\n      updateFormState();\n    } else {\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          updateFormState();\n          break;\n        }\n      }\n\n      renderWatchedInputs(name);\n    }\n  }, []);\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field?: Field, forceDelete?: boolean) => {\n      if (field) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister && !compact(field.options || []).length) {\n          unset(formStateRef.current.errors, field.ref.name);\n          set(formStateRef.current.dirtyFields, field.ref.name, true);\n\n          updateFormState({\n            isDirty: isFormDirty(),\n          });\n\n          readFormStateRef.current.isValid &&\n            resolverRef.current &&\n            validateResolver();\n          updateWatchedValue(field.ref.name);\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    name &&\n      (Array.isArray(name) ? name : [name]).forEach((inputName) =>\n        fieldsRef.current[inputName] && isKey(inputName)\n          ? delete formStateRef.current.errors[inputName]\n          : unset(formStateRef.current.errors, inputName),\n      );\n\n    updateFormState({\n      errors: name ? formStateRef.current.errors : {},\n    });\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption) {\n    const ref = (fieldsRef.current[name] || {})!.ref;\n\n    set(formStateRef.current.errors, name, {\n      ...error,\n      ref,\n    });\n\n    updateFormState({\n      isValid: false,\n    });\n\n    error.shouldFocus && ref && ref.focus && ref.focus();\n  }\n\n  const watchInternal = React.useCallback(\n    <T>(fieldNames?: string | string[], defaultValue?: T, watchId?: string) => {\n      const watchFields = watchId\n        ? useWatchFieldsRef.current[watchId]\n        : watchFieldsRef.current;\n      let fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        cloneObject(shallowFieldsStateRef.current),\n        shouldUnregister,\n        false,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        const parentNodeName = getNodeParentName(fieldNames) || fieldNames;\n\n        if (fieldArrayNamesRef.current.has(parentNodeName)) {\n          fieldValues = {\n            ...fieldArrayValuesRef.current,\n            ...fieldValues,\n          };\n        }\n\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(get(defaultValuesRef.current, fieldNames))\n            ? defaultValue\n            : get(defaultValuesRef.current, fieldNames),\n          true,\n        );\n      }\n\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n\n      if (Array.isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      isWatchAllRef.current = isUndefined(watchId);\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name?: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[] | undefined,\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    for (const fieldName of Array.isArray(name) ? name : [name]) {\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\n    }\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    options: RegisterOptions | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn(\n          '📋 Field is missing `name` attribute',\n          ref,\n          `https://react-hook-form.com/api#useForm`,\n        );\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+].\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\"',\n          ref,\n          'https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...options,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    const compareRef = (currentRef: Ref) =>\n      isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? Array.isArray(field.options) &&\n          compact(field.options).find((option) => {\n            return value === option.ref.value && compareRef(option.ref);\n          })\n        : compareRef(field.ref))\n    ) {\n      fields[name] = {\n        ...field,\n        ...options,\n      };\n      return;\n    }\n\n    if (type) {\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...compact((field && field.options) || []),\n              {\n                ref,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...options,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(shallowFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : shallowFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(name as FieldName<TFieldValues>, defaultValue);\n      }\n    }\n\n    if (!isEmptyObject(options)) {\n      set(fieldsWithValidationRef.current, name, true);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          shallowFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = formStateRef.current.isValid;\n\n          isEmptyObject(error)\n            ? set(validFieldsRef.current, name, true)\n            : unset(validFieldsRef.current, name);\n\n          previousFormIsValid !== isEmptyObject(error) && updateFormState();\n        });\n      }\n    }\n\n    if (shouldUnregister && !(isFieldArray && isEmptyDefaultValue)) {\n      !isFieldArray && unset(formStateRef.current.dirtyFields, name);\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    options?: RegisterOptions,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    options?: RegisterOptions,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    options?: RegisterOptions,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrRegisterOptions?:\n      | FieldName<TFieldValues>\n      | RegisterOptions\n      | (TFieldElement & Ref)\n      | null,\n    options?: RegisterOptions,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrRegisterOptions)) {\n        registerFieldRef({ name: refOrRegisterOptions }, options);\n      } else if (\n        isObject(refOrRegisterOptions) &&\n        'name' in refOrRegisterOptions\n      ) {\n        registerFieldRef(refOrRegisterOptions, options);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrRegisterOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      onValid: SubmitHandler<TSubmitFieldValues>,\n      onInvalid?: SubmitErrorHandler<TFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues = setFieldArrayDefaultValues(\n        getFieldsValues(\n          fieldsRef,\n          cloneObject(shallowFieldsStateRef.current),\n          shouldUnregister,\n          true,\n        ),\n      );\n\n      readFormStateRef.current.isSubmitting &&\n        updateFormState({\n          isSubmitting: true,\n        });\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          formStateRef.current.errors = fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const { name } = field.ref;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                shallowFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                unset(validFieldsRef.current, name);\n              } else if (get(fieldsWithValidationRef.current, name)) {\n                unset(formStateRef.current.errors, name);\n                set(validFieldsRef.current, name, true);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(formStateRef.current.errors).every(\n            (name) => name in fieldsRef.current,\n          )\n        ) {\n          updateFormState({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          formStateRef.current.errors = {\n            ...formStateRef.current.errors,\n            ...fieldErrors,\n          };\n          onInvalid && (await onInvalid(formStateRef.current.errors, e));\n          shouldFocusError &&\n            focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\n        }\n      } finally {\n        formStateRef.current.isSubmitting = false;\n        updateFormState({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\n          submitCount: formStateRef.current.submitCount + 1,\n        });\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!isValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n\n    fieldArrayDefaultValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n\n    updateFormState({\n      submitCount: submitCount ? formStateRef.current.submitCount : 0,\n      isDirty: isDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\n      isValid: isValid ? formStateRef.current.isValid : false,\n      dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\n      touched: touched ? formStateRef.current.touched : {},\n      errors: errors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset = (\n    values?: DefaultValues<TFieldValues>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && Array.isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n    defaultValuesRef.current = { ...(values || defaultValuesRef.current) };\n    values && renderWatchedInputs('');\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    shallowFieldsStateRef.current = shouldUnregister\n      ? {}\n      : cloneObject(values || defaultValuesRef.current);\n\n    resetRefs(omitResetState);\n  };\n\n  React.useEffect(() => {\n    resolver && readFormStateRef.current.isValid && validateResolver();\n    observerRef.current =\n      observerRef.current || !isWeb\n        ? observerRef.current\n        : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\n  }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\n\n  React.useEffect(\n    () => () => {\n      observerRef.current && observerRef.current.disconnect();\n      isUnMount.current = true;\n\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n\n      Object.values(fieldsRef.current).forEach((field) =>\n        removeFieldEventListenerAndRef(field, true),\n      );\n    },\n    [],\n  );\n\n  if (!resolver && readFormStateRef.current.isValid) {\n    formState.isValid =\n      deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\n      isEmptyObject(formStateRef.current.errors);\n  }\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [setInternalValue, trigger]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (process.env.NODE_ENV !== 'production') {\n              if (prop === 'isValid' && isOnSubmit) {\n                console.warn(\n                  '📋 `formState.isValid` is applicable with `onTouched`, `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n                );\n              }\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = React.useMemo(\n    () => ({\n      isFormDirty,\n      updateWatchedValue,\n      shouldUnregister,\n      updateFormState,\n      removeFieldEventListener,\n      watchInternal,\n      mode: modeRef.current,\n      reValidateMode: {\n        isReValidateOnBlur,\n        isReValidateOnChange,\n      },\n      validateResolver: resolver ? validateResolver : undefined,\n      fieldsRef,\n      resetFieldArrayFunctionRef,\n      useWatchFieldsRef,\n      useWatchRenderFunctionsRef,\n      fieldArrayDefaultValuesRef,\n      validFieldsRef,\n      fieldsWithValidationRef,\n      fieldArrayNamesRef,\n      readFormStateRef,\n      formStateRef,\n      defaultValuesRef,\n      shallowFieldsStateRef,\n      fieldArrayValuesRef,\n      ...commonProps,\n    }),\n    [\n      defaultValuesRef.current,\n      updateWatchedValue,\n      shouldUnregister,\n      removeFieldEventListener,\n      watchInternal,\n    ],\n  );\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: formState.errors,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues, FormProviderProps } from './types';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","(function(a,b){\"object\"==typeof exports&&\"undefined\"!=typeof module?b(exports,require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"),require(\"react\"),require(\"@babel/runtime/helpers/defineProperty\")):\"function\"==typeof define&&define.amd?define([\"exports\",\"@babel/runtime/helpers/objectWithoutPropertiesLoose\",\"react\",\"@babel/runtime/helpers/defineProperty\"],b):(a=a||self,b(a.Img={},a._objectWithoutPropertiesLoose,a.React,a._defineProperty))})(this,function(a,b,c,d){'use strict';function e(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function f(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?e(Object(b),!0).forEach(function(c){d(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):e(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function g(a){var b=a.srcList,d=a.imgPromise,e=void 0===d?j({decode:!0}):d,g=a.useSuspense,h=void 0===g||g,i=c.useState(!0),o=i[1],p=k(l(b)),q=p.join(\"\");if(m[q]||(m[q]={promise:n(p,e),cache:\"pending\",error:null}),m[q].promise.then(function(a){m[q]=f(f({},m[q]),{},{cache:\"resolved\",src:a}),h||o(!1)})[\"catch\"](function(a){m[q]=f(f({},m[q]),{},{cache:\"rejected\",error:a}),h||o(!1)}),\"resolved\"===m[q].cache)return{src:m[q].src,isLoading:!1,error:null};if(\"rejected\"===m[q].cache){if(h)throw m[q].error;return{isLoading:!1,error:m[q].error,src:void 0}}if(h)throw m[q].promise;return{isLoading:!0,src:void 0,error:null}}function h(a){var c=a.decode,d=a.src,e=void 0===d?[]:d,f=a.loader,h=void 0===f?null:f,k=a.unloader,l=void 0===k?null:k,m=a.container,n=void 0===m?o:m,p=a.loaderContainer,q=void 0===p?o:p,r=a.unloaderContainer,s=void 0===r?o:r,t=a.imgPromise,u=a.crossorigin,v=a.useSuspense,w=void 0!==v&&v,x=b(a,[\"decode\",\"src\",\"loader\",\"unloader\",\"container\",\"loaderContainer\",\"unloaderContainer\",\"imgPromise\",\"crossorigin\",\"useSuspense\"]);t=t||j({decode:!(void 0!==c)||c,crossOrigin:u});var y=g({srcList:e,imgPromise:t,useSuspense:w}),z=y.src,A=y.isLoading;return z?n(i.createElement(\"img\",Object.assign({src:z},x))):!w&&A?q(h):!w&&l?s(l):null}b=b&&Object.prototype.hasOwnProperty.call(b,\"default\")?b[\"default\"]:b;var i=\"default\"in c?c[\"default\"]:c;d=d&&Object.prototype.hasOwnProperty.call(d,\"default\")?d[\"default\"]:d;var j=function(a){var b=a.decode,c=a.crossOrigin,d=void 0===c?\"\":c;return function(a){return new Promise(function(c,e){var f=new Image;d&&(f.crossOrigin=d),f.onload=function(){(!(void 0!==b)||b)&&f.decode?f.decode().then(c)[\"catch\"](e):c()},f.onerror=e,f.src=a})}},k=function(b){return b.filter(function(a){return a})},l=function(a){return Array.isArray(a)?a:[a]},m={},n=function(a,b){var c=!1;return new Promise(function(d,e){var f=function(a){return b(a).then(function(){c=!0,d(a)})};a.reduce(function(a,b){return a[\"catch\"](function(){if(!c)return f(b)})},f(a.shift()))[\"catch\"](e)})},o=function(a){return a};a.Img=h,a.useImage=g,Object.defineProperty(a,\"__esModule\",{value:!0})});\n//# sourceMappingURL=index.js.map\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}